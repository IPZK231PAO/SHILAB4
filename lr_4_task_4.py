# -*- coding: utf-8 -*-
"""LR_4_task_4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/191Yp9-OirloZReOcJiDcY-KsKxEuFeQZ
"""

import matplotlib.pyplot as plt
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error
from sklearn.model_selection import train_test_split

# Завантаження набору даних про діабет
diabetes = datasets.load_diabetes()
X = diabetes.data
y = diabetes.target

# Поділ даних на навчальну та тестову вибірки (test_size = 0.5)
Xtrain, Xtest, ytrain, ytest = train_test_split(X, y, test_size=0.5, random_state=0)

# Створення лінійного регресора та навчання на тренувальних даних
regr = linear_model.LinearRegression()
regr.fit(Xtrain, ytrain)

# Прогнозування на тестових даних
ypred = regr.predict(Xtest)

# Розрахунок коефіцієнтів регресії та перехоплення
print("Коефіцієнти регресії:", regr.coef_)
print("Перехоплення:", regr.intercept_)

# Розрахунок оцінок
r2 = r2_score(ytest, ypred)
mae = mean_absolute_error(ytest, ypred)
mse = mean_squared_error(ytest, ypred)

print("\nКоефіцієнт кореляції R2:", round(r2, 2))
print("Середня абсолютна помилка (MAE):", round(mae, 2))
print("Середньоквадратична помилка (MSE):", round(mse, 2))

# Побудова графіку
fig, ax = plt.subplots()
ax.scatter(ytest, ypred, edgecolors=(0, 0, 0))
ax.plot([y.min(), y.max()], [y.min(), y.max()], 'k--', lw=4)
ax.set_xlabel('Виміряно')
ax.set_ylabel('Передбачено')
plt.show()