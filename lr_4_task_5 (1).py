# -*- coding: utf-8 -*-
"""LR_4_task_5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/191Yp9-OirloZReOcJiDcY-KsKxEuFeQZ
"""

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score

# Генерація даних
m = 100
X = np.linspace(-3, 3, m).reshape(-1, 1)  # X має бути стовпцем
y = 2 * np.sin(X).ravel() + np.random.uniform(-0.5, 0.5, m)

# Лінійна регресія
lin_reg = LinearRegression()
lin_reg.fit(X, y)
y_lin_pred = lin_reg.predict(X)

# Поліноміальна регресія (степінь 2)
poly_features = PolynomialFeatures(degree=2, include_bias=False)
X_poly = poly_features.fit_transform(X)

lin_reg_poly = LinearRegression()
lin_reg_poly.fit(X_poly, y)
y_poly_pred = lin_reg_poly.predict(X_poly)

# Виведення коефіцієнтів для обох моделей
print("Лінійна регресія:")
print("Перехоплення:", lin_reg.intercept_)
print("Коефіцієнт:", lin_reg.coef_)

print("\nПоліноміальна регресія:")
print("Перехоплення:", lin_reg_poly.intercept_)
print("Коефіцієнти:", lin_reg_poly.coef_)

# Побудова графіків
plt.figure(figsize=(10, 6))

# Данні
plt.scatter(X, y, color='black', label="Данні", s=20)

# Лінійна регресія
plt.plot(X, y_lin_pred, label="Лінійна регресія", color='blue', lw=2)

# Поліноміальна регресія
plt.plot(X, y_poly_pred, label="Поліноміальна регресія (степінь 2)", color='red', lw=2)

plt.xlabel('X')
plt.ylabel('y')
plt.title('Лінійна та поліноміальна регресія')
plt.legend()
plt.show()

# Оцінка якості моделі
mse_lin = mean_squared_error(y, y_lin_pred)
r2_lin = r2_score(y, y_lin_pred)
mse_poly = mean_squared_error(y, y_poly_pred)
r2_poly = r2_score(y, y_poly_pred)

print("\nОцінка лінійної регресії:")
print(f"Середньоквадратична помилка (MSE): {mse_lin}")
print(f"R^2: {r2_lin}")

print("\nОцінка поліноміальної регресії:")
print(f"Середньоквадратична помилка (MSE): {mse_poly}")
print(f"R^2: {r2_poly}")